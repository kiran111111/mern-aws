{"version":3,"sources":["components/updateTodo.jsx","components/showTodoList.jsx","components/createTodo.jsx","App.js","reportWebVitals.js","index.js"],"names":["UpdateTodo","_id","handleClose","handleUpdate","useState","title","description","data","setData","handleChange","e","target","name","value","className","onSubmit","preventDefault","console","log","axios","put","then","res","message","catch","err","handleSubmit","htmlFor","type","onChange","TodoCard","handleEdit","handleDelete","onClick","ShowTodoList","todo","setTodo","open","setOpen","id","setId","update","setUpdate","delete","filter","useEffect","get","to","map","CreateTodo","post","noValidate","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAGO,SAASA,EAAT,GAAyD,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC7C,EAAwBC,mBAAS,CAAEC,MAAO,GAAIC,YAAa,KAA3D,mBAAOC,EAAP,KAAaC,EAAb,KAEA,SAASC,EAAaC,GACpBF,GAAQ,SAACD,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,WAoB1D,OACE,uBACEC,UAAU,iBACVC,SAAU,SAACL,IApBf,SAAsBA,GACpBA,EAAEM,iBAEFC,QAAQC,IAAI,CAAEjB,OAAO,CAAEM,SAEvBY,IACGC,IADH,oBACoBnB,GAAOM,GACxBc,MAAK,SAACC,GACLd,EAAQ,CAAEH,MAAO,GAAIC,YAAa,KAClCW,QAAQC,IAAII,EAAIf,KAAKgB,YAEtBC,OAAM,SAACC,GACNR,QAAQC,IAAI,yBACZD,QAAQC,IAAIO,EAAIF,YAQhBG,CAAahB,GACbP,IACAD,KALJ,UAQE,uBAAOyB,QAAQ,QAAQb,UAAU,QAAjC,mBAGA,uBACEc,KAAK,OACLhB,KAAK,QACLE,UAAU,QACVe,SAAUpB,IAEZ,uBAAOkB,QAAQ,cAAcb,UAAU,QAAvC,yBAGA,uBACEc,KAAK,OACLhB,KAAK,cACLE,UAAU,QACVe,SAAUpB,IAEZ,wBAAQmB,KAAK,SAASd,UAAU,SAAhC,uBCjDN,SAASgB,EAAT,GAAuD,IAAnCvB,EAAkC,EAAlCA,KAAMwB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAC5B/B,EAA4BM,EAA5BN,IAAKI,EAAuBE,EAAvBF,MAAOC,EAAgBC,EAAhBD,YAEpB,OACE,+BACE,sBAAKQ,UAAU,oBAAf,UACE,6BAAKT,IACL,4BAAIC,OAGN,sBAAKQ,UAAU,mBAAf,UACE,wBAAQA,UAAU,SAASF,KAAMX,EAAKgC,QAASF,EAA/C,kBAGA,wBAAQjB,UAAU,SAASF,KAAMX,EAAKgC,QAASD,EAA/C,yBAVK/B,GAkBN,SAASiC,IACd,MAAwB9B,mBAAS,IAAjC,mBAAO+B,EAAP,KAAaC,EAAb,KACA,EAAwBhC,oBAAS,GAAjC,mBAAOiC,EAAP,KAAaC,EAAb,KACA,EAAoBlC,mBAAS,IAA7B,mBAAOmC,EAAP,KAAWC,EAAX,KACA,EAA4BpC,oBAAS,GAArC,mBAAOqC,EAAP,KAAeC,EAAf,KAiBA,SAASX,EAAWrB,GAClB8B,EAAM9B,EAAEC,OAAOC,MACf0B,GAAQ,GAQV,SAASN,EAAatB,GACpBS,IAAMwB,OAAN,oBAA0BjC,EAAEC,OAAOC,OAEnCwB,GAAQ,SAAC7B,GACP,OAAOA,EAAKqC,QAAO,SAACT,GAAD,OAAUA,EAAKlC,MAAQS,EAAEC,OAAOC,WAIvD,SAASV,IACPsC,EAAM,IACNF,GAAQ,GAGV,OAtCAO,qBACE,WACE1B,IACG2B,IAAI,aACJzB,MAAK,SAACC,GACLL,QAAQC,IAAII,EAAIf,MAChB6B,EAAQd,EAAIf,SAEbiB,OAAM,SAACC,GACNR,QAAQC,IAAIO,EAAIF,cAGtB,CAACkB,IA2BD,0BAAS3B,UAAU,YAAnB,UACE,cAAC,IAAD,CAAMiC,GAAG,eAAejC,UAAU,aAAlC,SACE,wBAAQA,UAAU,SAAlB,mBAEF,0BAASA,UAAU,WAAnB,UACE,sCACA,oBAAIA,UAAU,iBAAd,SACGqB,EAAKa,KAAI,SAACzC,GAAD,OACR,cAACuB,EAAD,CACEvB,KAAMA,EACNwB,WAAYA,EACZC,aAAcA,YAKrBK,EACC,yBAASvB,UAAU,mBAAnB,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGmB,QAAS/B,EAAaY,UAAU,QAAnC,kBAIA,cAACd,EAAD,CACEC,IAAKsC,EACLrC,YAAaA,EACbC,aA7CZ,WACEc,QAAQC,IAAI,UAAWuB,GAASA,GAChCC,GAAWD,WAgDP,MClGD,SAASQ,IACd,MAAwB7C,mBAAS,CAAEC,MAAO,GAAIC,YAAa,KAA3D,mBAAOC,EAAP,KAAaC,EAAb,KAEA,SAASC,EAAaC,GACpBF,GAAQ,SAACD,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,WAkB1D,OACE,0BAASC,UAAU,YAAnB,UACE,cAAC,IAAD,CAAMiC,GAAG,IAAT,SACE,wBAAQnB,KAAK,SAASd,UAAU,qBAAhC,oBAKF,yBAASA,UAAU,WAAnB,SACE,uBAAMC,SAxBZ,SAAsBL,GACpBA,EAAEM,iBAEFG,IACG+B,KAAK,YAAa3C,GAClBc,MAAK,SAACC,GACLd,EAAQ,CAAEH,MAAO,GAAIC,YAAa,KAClCW,QAAQC,IAAII,EAAIf,KAAKgB,YAEtBC,OAAM,SAACC,GACNR,QAAQC,IAAI,8BACZD,QAAQC,IAAIO,EAAIF,aAacT,UAAU,iBAAiBqC,YAAU,EAAnE,UACE,uBAAOrC,UAAU,QAAQa,QAAQ,QAAjC,mBAGA,uBACEC,KAAK,OACLhB,KAAK,QACLC,MAAON,EAAKF,MACZwB,SAAUpB,EACVK,UAAU,UAEZ,uBAAOA,UAAU,QAAQa,QAAQ,cAAjC,yBAGA,uBACEC,KAAK,OACLhB,KAAK,cACLC,MAAON,EAAKD,YACZuB,SAAUpB,EACVK,UAAU,UAEZ,wBAAQc,KAAK,SAASd,UAAU,SAAhC,iC,MCzCKsC,MAXf,WACI,OACI,qBAAKtC,UAAU,eAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjC,cAAC,IAAD,CAAOoB,KAAK,eAAeC,UAAWN,UCEvCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.34b636c6.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nexport function UpdateTodo({ _id, handleClose, handleUpdate }) {\n  const [data, setData] = useState({ title: \"\", description: \"\" });\n\n  function handleChange(e) {\n    setData((data) => ({ ...data, [e.target.name]: e.target.value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    console.log({ _id }, { data });\n\n    axios\n      .put(`/api/todo/${_id}`, data)\n      .then((res) => {\n        setData({ title: \"\", description: \"\" });\n        console.log(res.data.message);\n      })\n      .catch((err) => {\n        console.log(\"Failed to update todo\");\n        console.log(err.message);\n      });\n  }\n\n  return (\n    <form\n      className=\"form-container\"\n      onSubmit={(e) => {\n        handleSubmit(e);\n        handleUpdate();\n        handleClose();\n      }}\n    >\n      <label htmlFor=\"title\" className=\"label\">\n        Title\n      </label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        className=\"input\"\n        onChange={handleChange}\n      />\n      <label htmlFor=\"description\" className=\"label\">\n        Description\n      </label>\n      <input\n        type=\"text\"\n        name=\"description\"\n        className=\"input\"\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"button\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { UpdateTodo } from \"./updateTodo\";\n\nfunction TodoCard({ data, handleEdit, handleDelete }) {\n  const { _id, title, description } = data;\n\n  return (\n    <li key={_id}>\n      <div className=\"title-description\">\n        <h3>{title}</h3>\n        <p>{description}</p>\n      </div>\n\n      <div className=\"button-container\">\n        <button className=\"button\" name={_id} onClick={handleEdit}>\n          edit\n        </button>\n        <button className=\"button\" name={_id} onClick={handleDelete}>\n          delete\n        </button>\n      </div>\n    </li>\n  );\n}\n\nexport function ShowTodoList() {\n  const [todo, setTodo] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [update, setUpdate] = useState(false);\n\n  useEffect(\n    function () {\n      axios\n        .get(\"/api/todo\")\n        .then((res) => {\n          console.log(res.data);\n          setTodo(res.data);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    },\n    [update]\n  );\n\n  function handleEdit(e) {\n    setId(e.target.name);\n    setOpen(true);\n  }\n\n  function handleUpdate() {\n    console.log(\"update:\", update, !update);\n    setUpdate(!update);\n  }\n\n  function handleDelete(e) {\n    axios.delete(`/api/todo/${e.target.name}`);\n\n    setTodo((data) => {\n      return data.filter((todo) => todo._id !== e.target.name);\n    });\n  }\n\n  function handleClose() {\n    setId(\"\");\n    setOpen(false);\n  }\n\n  return (\n    <section className=\"container\">\n      <Link to=\"/create-todo\" className=\"button-new\">\n        <button className=\"button\">New</button>\n      </Link>\n      <section className=\"contents\">\n        <h1>TODO</h1>\n        <ul className=\"list-container\">\n          {todo.map((data) => (\n            <TodoCard\n              data={data}\n              handleEdit={handleEdit}\n              handleDelete={handleDelete}\n            />\n          ))}\n        </ul>\n      </section>\n      {open ? (\n        <section className=\"update-container\">\n          <div className=\"update-contents\">\n            <p onClick={handleClose} className=\"close\">\n              &times;\n            </p>\n\n            <UpdateTodo\n              _id={id}\n              handleClose={handleClose}\n              handleUpdate={handleUpdate}\n            />\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n    </section>\n  );\n}\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport axios from \"axios\";\n\nexport function CreateTodo() {\n  const [data, setData] = useState({ title: \"\", description: \"\" });\n\n  function handleChange(e) {\n    setData((data) => ({ ...data, [e.target.name]: e.target.value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    axios\n      .post(\"/api/todo\", data)\n      .then((res) => {\n        setData({ title: \"\", description: \"\" });\n        console.log(res.data.message);\n      })\n      .catch((err) => {\n        console.log(\"Error couldn't create TODO\");\n        console.log(err.message);\n      });\n  }\n\n  return (\n    <section className=\"container\">\n      <Link to=\"/\">\n        <button type=\"button\" className=\"button button-back\">\n          back\n        </button>\n      </Link>\n\n      <section className=\"contents\">\n        <form onSubmit={handleSubmit} className=\"form-container\" noValidate>\n          <label className=\"label\" htmlFor=\"title\">\n            Title\n          </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={data.title}\n            onChange={handleChange}\n            className=\"input\"\n          />\n          <label className=\"label\" htmlFor=\"description\">\n            Description\n          </label>\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={data.description}\n            onChange={handleChange}\n            className=\"input\"\n          />\n          <button type=\"submit\" className=\"button\">\n            create todo\n          </button>\n        </form>\n      </section>\n    </section>\n  );\n}\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport { ShowTodoList } from \"./components/showTodoList\";\nimport { CreateTodo } from \"./components/createTodo\";\nimport \"./App.scss\";\n\nfunction App() {\n    return (\n        <div className=\"app-contents\">\n            <BrowserRouter>\n                <Route exact path=\"/\" component={ShowTodoList} />\n                <Route path=\"/create-todo\" component={CreateTodo} />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}